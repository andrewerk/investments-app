{
    "openapi": "3.0.0",
    "info": {
        "title": "Investments App!",
        "description": "API for an investments app, with endpoints to create and manage your username, login, deposit money into your account, withdraw, buy and sell assets, and check your transaction history and earnings so far.",
        "contact": {
            "email": "andrewerk1804@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/users": {
            "post": {
                "summary": "Creates new user",
                "description": "Creates new user to the system. By requesting this endpoint with the correct requisition body, the user should receive an authentication token, which should be used for all others requests to the system, except login. This token should be sent in the requests header, in the key authorization. In swagger UI, users can authenticate all their requests by copying the token into the green locker on the top-right of the page. It`s important to state that the email to create a new user should be sent with the correct form, the password must have at least 6 characters and the full name 3 characters.",
                "tags": ["user"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            },
                            "examples": {
                                "UserData": {
                                    "summary": "user",
                                    "value": {
                                        "fullName": "User full name",
                                        "email": "user@email.com",
                                        "password": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                      "description": "Some of the required fields are missing."
                    },
                    "409": {
                        "description": "Email already registered."
                      },
                    "422": {
                      "description": "Some fields was sent incorrectly."
                    },
                    "201": {
                      "description": "New user registered.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/token"
                          }
                        }
                      }
                    }  
                }
            },
            "patch": {
              "summary": "Edit user full name or email",
              "description": "This endpoint allows the user to update personal information. In this endpoint, it is necessary to send a JWT validation token.",
              "tags": ["user"],
              "security": [
                {
                "jwt": []
              }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/userUpdated"
                          },
                          "examples": {
                              "UserData": {
                                  "summary": "userUpdated",
                                  "value": {
                                      "fullName": "User full name",
                                      "email": "user@email.com"
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "400": {
                    "description": "Some of the required fields are missing."
                  },
                  "401": {
                    "description": "Token not found or invalid."
                  },
                  "409": {
                    "description": "Email already registered."
                  },
                "422": {
                  "description": "Some field were sent incorrectly."
                  },
                  "200": {
                    "description": "Data successfully updated.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/userUpdated"
                        }
                      }
                    }
                  }  
              }
          }
        },
        "/users/pass": {
          "patch": {
            "summary": "Change user password",
            "description": "this endpoint allows the user to change password. In this endpoint, it is necessary to send JWT validation token, which will be used to change identify the user.",
            "tags": ["user"],
            "security": [
              {
              "jwt": []
            }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/changePassword"
                        },
                        "examples": {
                            "UserData": {
                                "summary": "password",
                                "value": {
                                    "password": "newPassword"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "400": {
                  "description": "Some of the required fields are missing."
                },
                "401": {
                  "description": "Token not found or invalid."
                },
                "422": {
                  "description": "Some fields were sent incorrectly."
                  },
                "204": {
                  "description": "Password successfully changed"
                }  
            }
        }
      },
        "/login": {
            "post": {
                "summary": "Login into system.",
                "description": "Already registered users are allowed to retrieve a new token by using this endpoint, in case of losing the previous token or it is expired.",
                "tags": ["login"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/loginBody"
                            },
                            "examples": {
                                "UserData": {
                                    "summary": "login",
                                    "value": {
                                        "email": "user@email.com",
                                        "password": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                  "400": {
                    "description": "Some of the required fields are missing."
                  },
                  "422": {
                    "description": "Some fields were sent incorrectly."
                    },
                    "200": {
                      "description": "Login successfully.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/token"
                          }
                        }
                      }
                    }  
                }
            }
        },
      "/account": {
        "get": {
          "summary": "Verify account balance",
          "description": "This endpoint allows users to check their account balance.  In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["account"],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
              "401": {
                "description": "Token not found or invalid."
              },
              "200": {
                "description": "User account.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/account"
                    }
                }
              }
            }  
          }
        }
      },
      "/account/deposit": {
        "post": {
            "summary": "Deposit into your account",
            "description": "Endpoint used for deposit operations in the user's account. The value property with the total amount to be deposited must be sent in the request body. Once you have money in the account, it will be possible to purchase assets in the future. It is not necessary to send any information to identify the user, since the identification is done automatically by the token, which is mandatory in this request. The endpoint will return the user's full name and their bank balance.",
            "tags": ["account"],
            "security": [
              {
              "jwt": []
            }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/transaction"
                        },
                        "examples": {
                            "UserData": {
                                "summary": "transaction",
                                "value": {
                                    "value": 1000
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
              "400": {
                "description": "Some of the required fields are missing."
              },
              "401": {
                "description": "Token not found or invalid."
              },
              "422": {
                "description": "Some fields were sent incorrectly."
                },
                "200": {
                  "description": "Money successfully sent.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/account"
                      }
                    }
                  }
                }  
            }
        }
      },
      "/account/withdraw": {
        "post": {
            "summary": " Money Withdraw",
            "description": "The endpoint is used for withdrawing operations out of the user's account. The value property with the total amount to be deposited must be sent in the request body. If the user does not have enough funds to withdraw, an exception will be thrown. It is not necessary to send any information to identify the user, since the identification is done automatically by the token, which is mandatory in this request. The endpoint will return the user's full name and bank balance.",
            "tags": ["account"],
            "security": [
              {
              "jwt": []
            }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/transaction"
                        },
                        "examples": {
                            "UserData": {
                                "summary": "transaction",
                                "value": {
                                    "value": 100
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
              "400": {
                "description": "Some of the required fields are missing."
              },
              "401": {
                "description": "Token not found or invalid."
              },
              "409": {
                "description": "Not enough funds to withdraw."
              },
              "422": {
                "description": "Some fields were sent incorrectly."
                },
                "200": {
                  "description": "Money successfully withdraw.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/account"
                      }
                    }
                  }
                }  
            }
        }
      },
      "/stocks": {
        "get": {
          "summary": "Listing top company's stocks",
          "description": "This endpoint returns 20 pre-selected stocks, of important companies in the world scenario. The array returns objects with the stock symbol, current value, and amount available to negotiate.In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["stocks"],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
            "200": {
              "description": "Top company's stocks",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/stock"
                      }
                  }
                }
              }
            }  
          }
        }
      },
      "/stocks/{symbol}": {
        "get": {
          "summary": "Search stock by symbol",
          "description": "This endpoint returns info about a specific stock, which should be sent in the URL, as a parameter. It returns an object with the stock symbol, current value, and amount available to negotiate. It can be searched for any stock by its symbol. In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["stocks"],
          "security": [
            {
            "jwt": []
            }
          ],
          "parameters": [
            {
              "name": "symbol",
              "in": "path",
              "description": "Stock Symbol",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid"
            },
            "404": {
              "description": "Stock not found"
            },
            "200": {
              "description": "Stock information.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/stock"
                  }
                }
              }
            }  
          }
        }
      },
      "/investments/buy": {
        "post": {
            "summary": "Buy assets",
            "description": "Endpoint used for stock purchase operations. The 'symbol' property must be sent in the request body, which represents the official symbol of the action, such as AAPL for Apple shares (examples of symbols can be found at https://www.nasdaq.com/market -activity/stocks/screener ). In addition to the symbol, the quantity of the asset to be purchased must also be sent, using the 'quantity' property. The endpoint will return an object with the user's asset 'id', with the 'stockSymbol' and the quantity, representing the total amount of assets that the user has. Important: if the user buys or sells more assets of the same stock, the id will be the same, as well as the amount will be affected by the new purchase or sale. This request may fail in scenarios where the user does not have enough funds for the purchase, the company does not have enough assets to sell, or the request is not authenticated. It is not necessary to send any information to identify the user, since the identification is done automatically by the token, which is mandatory in this request.",
            "tags": ["investments"],
            "security": [
              {
              "jwt": []
            }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/assetTrade"
                        },
                        "examples": {
                            "UserData": {
                                "summary": "asset trade",
                                "value": {
                                  "symbol": "AAPL",
                                  "quantity": 1
                              }
                            }
                        }
                    }
                }
            },
            "responses": {
              "400": {
                "description": "Some of the required fields are missing."
              },
              "401": {
                "description": "Token not found or invalid"
              },
              "404": {
                "description": "Stock not found"
              },
              "409": {
                "description": "Account does not have enough funds for this purchase or withdraw, or company don't have enough assets for this sale."
              },
                "200": {
                  "description": "Purchase successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/assetTradeResponse"
                      }
                    }
                  }
                }  
            }
        }
      },
      "/investments/sell": {
        "post": {
            "summary": "Sell assets",
            "description": "Endpoint used for stock selling operations. The 'symbol' property must be sent in the request body, which represents the official symbol of the action, such as AAPL for Apple shares (examples of symbols can be found at https://www.nasdaq.com/market -activity/stocks/screener ). In addition to the symbol, the quantity of the assets to be sold must also be sent, using the 'quantity' property. The endpoint will return an object with the user's asset 'id', with the 'stockSymbol' and the quantity, representing the total amount of assets that the user has. Important: if the user buys or sells more assets of the same stock, the id will be the same, as well as the amount will be affected by the new purchase or sale. This request may fail in scenarios where the user does not have enough assets for sale, or the request is not authenticated. It is not necessary to send any information to identify the user, since the identification is done automatically by the token, which is mandatory in this request.",
            "tags": ["investments"],
            "security": [
              {
              "jwt": []
            }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/assetTrade"
                        },
                        "examples": {
                            "UserData": {
                                "summary": "asset trade",
                                "value": {
                                  "symbol": "AAPL",
                                  "quantity": 1
                              }
                            }
                        }
                    }
                }
            },
            "responses": {
              "400": {
                "description": "Some of the required fields are missing."
              },
              "401": {
                "description": "Token not found or invalid"
              },
              "404": {
                "description": "Stock not found"
              },
              "409": {
                "description": "User does not have enough assets for this sale."
              },
                "200": {
                  "description": "Sale successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/assetTradeResponse"
                      }
                    }
                  }
                }  
            }
        }
      },
      "/investments": {
        "get": {
          "summary": "Transaction history",
          "description": "This endpoint returns the user's transaction history. It returns an array of objects, in which can be found the trade 'id', portfolio 'id', stock symbol, value in the transaction moment, and asset quantity. In this endpoint, it is necessary to send a JWT validation token. ",
          "tags": ["investments"],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
              "200": {
                "description": "User trade history.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/tradeWithSymbol"
                    }
                  }
                }
              }
            }  
          }
        }
      },
      "/investments/user/{type}": {
        "get": {
          "summary": "Histórico de transações por tipo",
          "description": "This endpoint returns the user's transaction history, according to its type (purchase or sale). It returns an array of objects, in which can be found the trade 'id', portfolio 'id', stock symbol, value in the transaction moment, and asset quantity. In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["investments"],
          "parameters": [
            {
              "name": "type",
              "in": "path",
              "description": "Stock symbol",
              "required": true
            }
            ],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found."
            },
              "200": {
                "description": "User trade history by type",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/tradeWithSymbol"
                    }
                  }
                }
              }
            }  
          }
        }
      },
      "/assets": {
        "get": {
          "summary": "List all assets the user possesses",
          "description": "This endpoint returns all the assets the user possesses. The array contain objects, in which can be found information such as asset 'id', stock symbol, asset quantity, and current value. In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["assets"],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
              "200": {
                "description": "User assets.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/asset"
                    }
                  }
                }
              }
            }  
          }
        }
      },
      "/assets/{symbol}": {
        "get": {
          "summary": "User assets by stock symbol",
          "description": "This endpoint returns the stock searched in the URL parameter. The returns contain an object, in which can be found information such as asset 'id', stock symbol, asset quantity, and current value.  The asset trade history is also returned in the endpoint. In this endpoint, it is necessary to send a JWT validation token.",
          "tags": ["assets"],
          "security": [
            {
            "jwt": []
            }
          ],
          "parameters": [
            {
              "name": "symbol",
              "in": "path",
              "description": "Stock symbol",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
              "200": {
                "description": "Asset found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/assetHistory"
                    }
                  }
                }
              }
            }  
          }
        }
      },
      "/account/earnings": {
        "get": {
          "summary": "Return earnings",
          "description": "This endpoint returns the user's earnings to the point. The calculation considers the total spent buying assets, the total earned selling assets, and the total assets the user currently possesses.In this endpoint, it is necessary to send a JWT validation token. ",
          "tags": ["earnings"],
          "security": [
            {
            "jwt": []
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
              "200": {
                "description": "User earnings.",
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/earnings"
                  }
                }
              }
            }  
          }
        }
      },
      "/account/earnings/{symbol}": {
        "get": {
          "summary": "Returns earnings by stock symbol",
          "description": "This endpoint returns the user's earnings to the point, considering only one stock. The calculation considers the total spent buying assets, the total earned selling assets, and the total assets the user currently possesses.In this endpoint, it is necessary to send a JWT validation token. ",
          "tags": ["earnings"],
          "security": [
            {
            "jwt": []
            }
          ],
          "parameters": [
            {
              "name": "symbol",
              "in": "path",
              "description": "Stock symbol",
              "required": true
            }
          ],
          "responses": {
            "401": {
              "description": "Token not found or invalid."
            },
              "200": {
                "description": "User earnings by Stock.",
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/earnings"
                  }
                }
              }
            }  
          }
        }
      }
    },    
    "components": {
        "schemas": {
            "user": {
                "type": "object",
                "required": [ "fullName", "email", "password"],
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "balance": {
                      "type": "number"
                  }
                }
            },
            "loginBody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "changePassword": {
              "type": "object",
              "properties": {
                  "password": {
                      "type": "string"
                  }
              }
          },
            "token": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "transaction": {
              "type": "object",
              "properties": {
                  "value": {
                      "type": "number"
                  }
              }
            },
            "earnings": {
              "type": "object",
              "properties": {
                  "earnings": {
                      "type": "number"
                  }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                  "fullName": {
                    "type": "string"
                  },
                  "balance": {
                    "type": "number"
                  }
              }
            },
            "assetTrade": {
              "type": "object",
              "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
              }
            },
            "assetTradeResponse": {
              "type": "object",
              "properties": {
                  "id": {
                    "type": "number"
                  },
                  "stockSymbol": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
              }
          },
            "stock": {
              "type": "object",
              "properties": {
                  "currentValue": {
                    "type": "number"
                  },
                  "stock": {
                    "type": "string"
                  },
                  "stockQuantity": {
                    "type": "number"
                  }
              }
          },
            "asset": {
              "type": "object",
              "properties": {
                  "id": {
                    "type": "number"
                  },
                  "stockSymbol": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "currentValue": {
                    "type": "number"
                  }
              }
            },
            "assetHistory": {
              "type": "object",
              "properties": {
                  "id": {
                    "type": "number"
                  },
                  "stockSymbol": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "currentValue": {
                    "type": "array"
                  },
                  "trade": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/trade"
                    }
                  }          
              }
            },
            "tradeWithSymbol": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "quantity": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                },
                "createdAt": {
                  "type": "string"
                },
                "portfolio": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/portfolioInTrade"
                }
                }
              }
              },
              "trade": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  },
                  "createdAt": {
                    "type": "string"
                  }
                }
                },
              "portfolioInTrade": {
                "type": "object",
                "properties": {
                    "stockSymbol": {
                        "type": "string"
                    }
                }
              },
              "invalidToken": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "userUpdated": {
              "type": "object",
              "properties": {
                  "fullName": {
                      "type": "string"
                  },
                  "email": {
                    "type": "string"
                }
              }
          }
        },
        "responses": {
          "Unauthorized": {
            "description": "Expired or invalid token or Token not found"
          }
        },
        "securitySchemes": {
          "jwt": {
            "type": "apiKey",
            "in": "header",
            "name": "authorization"
          }
        }
    }
}